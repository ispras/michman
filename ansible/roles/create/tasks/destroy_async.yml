---

- name: acknowledge existing servers
  os_server_facts:

- name: debug
  set_fact: alive_servers="{{ alive_servers | default([]) | union([item.name]) }}"
  when: item['metadata']['group'] is defined and (cluster_name + '_master' == item['metadata']['group'] or cluster_name + '_slaves' == item['metadata']['group'] or cluster_name + '_fanlight' == item['metadata']['group'] or cluster_name + '_runner' == item['metadata']['group'] or cluster_name + '_storage' == item['metadata']['group'] or cluster_name + '_monitoring' == item['metadata']['group'])
  with_items: "{{ openstack_servers }}"
  no_log: True

- name: The following instances will be destroyed now
  debug: var=alive_servers


- name: destroy cluster instances
  os_server:
    state: absent
    name: "{{ item }}"
  with_items: "{{ alive_servers }}"
  retries: 3
  async: 1000
  poll: 0
  register: destruction_waitress
  when: alive_servers is defined


- name: 'Checking cluster is dead'
  async_status: jid={{ item.ansible_job_id }}
  register: slv
  until: slv.finished
  retries: 240
  with_items: "{{ destruction_waitress.results }}"
  when: destruction_waitress is defined

- name: destroy security group
  include: destroy_security_group.yml
