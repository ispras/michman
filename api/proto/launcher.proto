syntax = "proto3";

package protobuf;

service AnsibleRunner {
    rpc Create (Cluster) returns (TaskStatus) {}
    rpc Delete (Cluster) returns (TaskStatus) {}
    rpc Update (Cluster) returns (TaskStatus) {}
}

message Project {
    string ID = 1;
    string Name = 2;
    string DisplayName = 3;
    string GroupID = 4;
    string Description = 5;
    string DefaultImage = 6;
    string DefaultMasterFlavor = 7;
    string DefaultSlavesFlavor = 8;
    string DefaultStorageFlavor = 9;
    string DefaultMonitoringFlavor = 10;
}

message Cluster {
    string ID = 1;
    string Name = 2;
    string DisplayName = 3;
    string HostURL = 4;
    string EntityStatus = 5;
    string ClusterType = 6;
    repeated Service Services = 7;
    int32 NHosts = 8;
    string MasterIP = 9;
    string ProjectID = 10;
    string OwnerID = 11;
    string Description = 12;
    string Image = 13;
    repeated string Keys = 14;
    bool Monitoring = 15;
    string MasterFlavor = 16;
    string SlavesFlavor = 17;
    string StorageFlavor = 18;
    string MonitoringFlavor = 19;
}

message Service {
    string ID = 1;
    string Name = 2;
    string Type = 3;
    string ClusterRef = 4;
    map<string, string> Config = 5;
    string DisplayName = 6;
    string EntityStatus = 7;
    string Version = 8;
    string URL = 9; //masterIP + AccessPort - check run.go
    string Description = 10;
//    repeated DependencyConfig Dependencies = 11;
}

//message DependencyConfig {
//    string ServiceType = 1; //name of service type, on which this service depends
//    string ServiceVersion = 2;
//}

message Template {
    string ID = 1;
    string ProjectID = 2;
    string Name = 3;
    string DisplayName = 4;
    repeated Service Services = 5;
    int32 NHosts = 6;
    string Description = 7;
}

message TaskStatus {
    string Status = 1;
}

message HealthConfigs {
    string ParameterName = 1; 
    string Description = 2;  
    string Type = 3;                    //string, bool, float or int
    string DefaultValue = 4;

    bool Required = 5;                  //add this param to ansible extra vars or no
    string AnsibleVarName = 6;
    bool IsList = 7;
}

message ServiceHealthCheck {
    string ID = 1;
    string CheckType = 2;               // Types: Script, HTTP, TCP, TTL, Docker, gRPC 
    repeated HealthConfigs Configs = 3; 
}

message ServiceType {
    string ID = 1;
    string Type = 2;
    string Description = 3;
    repeated ServiceVersion Versions = 4;
    string DefaultVersion = 5;
    string Class = 6;
    int32 AccessPort = 7;
    repeated ServicePort Ports = 8;
    repeated ServiceHealthCheck HealthCheck = 9;
}

message ServiceVersion {
    string ID = 1;
    string Version = 2;
    string Description = 3;
    repeated ServiceConfig Configs = 4;
    string DownloadURL = 5; //if service has download url
    repeated ServiceDependency Dependencies = 6; //list of service-dependencies for this service version
}

message ServiceConfig {
    string ID = 1;
    string ParameterName = 2; //name for ansible extra vars
    string Type = 3; //string, bool, float or int
    repeated string PossibleValues = 4; //TODO: add stored functions for values verification
    string DefaultValue = 5;
    bool Required = 6; //add this param to ansible extra vars or no
    string Description = 7;
    string AnsibleVarName = 8;
    bool IsList = 9;
}

message ServiceDependency {
    string ServiceType = 1; //name of service type, on which this service version depends
    repeated string ServiceVersions = 2; //list of depended service versions that could be used with this service version
    string DefaultServiceVersion = 3; //default dependent service version
    string Description = 4;
    //bool Required = 5; //is this dependency required
}

message Image {
    string ID = 1;
    string Name = 2;
    string AnsibleUser = 3;
    string CloudImageID = 4;
}

message Flavor {
    string ID = 1;
    string Name = 2;
    int32 VCPUs = 3;
    int32 RAM = 4;
    int32 Disk = 5;
}

message ServicePort {
    int32 Port = 1;
    string Description = 2;
}